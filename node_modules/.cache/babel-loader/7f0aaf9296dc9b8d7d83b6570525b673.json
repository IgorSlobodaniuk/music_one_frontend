{"ast":null,"code":"module.exports = {\n  login: function login(username, pass, cb) {\n    if (localStorage.token) {\n      if (cb) cb(true);\n      return;\n    }\n\n    this.getToken(username, pass, function (res) {\n      if (res.authenticated) {\n        localStorage.token = res.token;\n        if (cb) cb(true);\n      } else {\n        if (cb) cb(false);\n      }\n    });\n  },\n  logout: function logout() {\n    delete localStorage.token;\n  },\n  loggedIn: function loggedIn() {\n    return !!localStorage.token;\n  },\n  getToken: function getToken(username, pass, cb) {\n    var payload = {\n      username: username,\n      password: pass\n    };\n    var headers = {\n      'content-type': 'application/json'\n    };\n    var options = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(payload)\n    }; // create fetch promise\n\n    var promise = fetch('/api/v1/login', options); // await promise\n\n    promise.then(function (response) {\n      return response.json();\n    }).then(function (token) {\n      // success - process response\n      if (token.key) {\n        cb({\n          authenticated: true,\n          token: token.key\n        });\n      } else {\n        cb({\n          authenticated: false\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/igor/kateryna_project/frontend/music_one_frontend/src/utils/auth.js"],"names":["module","exports","login","username","pass","cb","localStorage","token","getToken","res","authenticated","logout","loggedIn","payload","password","headers","options","method","body","JSON","stringify","promise","fetch","then","response","json","key"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,KAAK,EAAE,eAASC,QAAT,EAAmBC,IAAnB,EAAyBC,EAAzB,EAA6B;AAChC,QAAIC,YAAY,CAACC,KAAjB,EAAwB;AACpB,UAAIF,EAAJ,EAAQA,EAAE,CAAC,IAAD,CAAF;AACR;AACH;;AACD,SAAKG,QAAL,CAAcL,QAAd,EAAwBC,IAAxB,EAA8B,UAACK,GAAD,EAAS;AACnC,UAAIA,GAAG,CAACC,aAAR,EAAuB;AACnBJ,QAAAA,YAAY,CAACC,KAAb,GAAqBE,GAAG,CAACF,KAAzB;AACA,YAAIF,EAAJ,EAAQA,EAAE,CAAC,IAAD,CAAF;AACX,OAHD,MAGO;AACH,YAAIA,EAAJ,EAAQA,EAAE,CAAC,KAAD,CAAF;AACX;AACJ,KAPD;AAQH,GAdY;AAgBbM,EAAAA,MAAM,EAAE,kBAAW;AACf,WAAOL,YAAY,CAACC,KAApB;AACH,GAlBY;AAoBbK,EAAAA,QAAQ,EAAE,oBAAW;AACjB,WAAO,CAAC,CAACN,YAAY,CAACC,KAAtB;AACH,GAtBY;AAwBbC,EAAAA,QAAQ,EAAE,kBAASL,QAAT,EAAmBC,IAAnB,EAAyBC,EAAzB,EAA6B;AAEnC,QAAIQ,OAAO,GAAG;AACVV,MAAAA,QAAQ,EAAEA,QADA;AAEVW,MAAAA,QAAQ,EAAEV;AAFA,KAAd;AAKA,QAAIW,OAAO,GAAG;AACV,sBAAe;AADL,KAAd;AAIA,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVF,MAAAA,OAAO,EAAEA,OAFC;AAGVG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAHI,KAAd,CAXmC,CAiBnC;;AACA,QAAIQ,OAAO,GAAGC,KAAK,CAAC,eAAD,EAAkBN,OAAlB,CAAnB,CAlBmC,CAoBnC;;AACAK,IAAAA,OAAO,CAACE,IAAR,CAAa,UAASC,QAAT,EAAkB;AAC3B,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFD,EAEGF,IAFH,CAEQ,UAAShB,KAAT,EAAe;AACnB;AAEA,UAAGA,KAAK,CAACmB,GAAT,EAAc;AACVrB,QAAAA,EAAE,CAAC;AACCK,UAAAA,aAAa,EAAE,IADhB;AAECH,UAAAA,KAAK,EAAEA,KAAK,CAACmB;AAFd,SAAD,CAAF;AAIH,OALD,MAMK;AACDrB,QAAAA,EAAE,CAAC;AAACK,UAAAA,aAAa,EAAE;AAAhB,SAAD,CAAF;AACH;AACJ,KAdD;AAeH;AA5DY,CAAjB","sourcesContent":["module.exports = {\n    login: function(username, pass, cb) {\n        if (localStorage.token) {\n            if (cb) cb(true);\n            return\n        }\n        this.getToken(username, pass, (res) => {\n            if (res.authenticated) {\n                localStorage.token = res.token;\n                if (cb) cb(true)\n            } else {\n                if (cb) cb(false)\n            }\n        })\n    },\n\n    logout: function() {\n        delete localStorage.token\n    },\n\n    loggedIn: function() {\n        return !!localStorage.token\n    },\n\n    getToken: function(username, pass, cb) {\n\n        let payload = {\n            username: username,\n            password: pass\n        };\n\n        let headers = {\n            'content-type':'application/json'\n        };\n\n        let options = {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(payload),\n        };\n\n        // create fetch promise\n        let promise = fetch('/api/v1/login', options);\n\n        // await promise\n        promise.then(function(response){\n            return response.json();\n        }).then(function(token){\n            // success - process response\n\n            if(token.key) {\n                cb({\n                    authenticated: true,\n                    token: token.key\n                })\n            }\n            else {\n                cb({authenticated: false})\n            }\n        })\n    },\n};\n"]},"metadata":{},"sourceType":"module"}